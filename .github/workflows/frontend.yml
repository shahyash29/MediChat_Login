# # .github/workflows/frontend.yml
# name: Frontend CI/CD

# on:
#   push:
#     branches: [ main ]

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest

#     services:
#       selenium:
#         image: seleniarm/standalone-chromium:latest
#         ports:
#           - 4444:4444
#         options: >-
#           --health-cmd="curl -f http://localhost:4444/wd/hub/status || exit 1"
#           --health-interval=10s

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Setup Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18

#       - name: Install & start Backend
#         working-directory: backend
#         run: |
#           npm ci
#           npm start &                          # launch backend on :5001
#           npx wait-on --http-method GET http://localhost:5001/api/health   # wait until it's responding

#       - name: Install & build React
#         working-directory: medi-chat-frontend
#         env:
#           REACT_APP_API_URL: http://localhost:5001
#         run: |
#           npm ci
#           npm run build

#       - name: Serve and wait for Frontend
#         working-directory: medi-chat-frontend
#         run: |
#           npm install -g serve
#           serve -s build -l 3000 &            # serve production build on :3000
#           npx wait-on --http-method GET http://localhost:3000/medichat 

#       - name: Run Selenium E2E tests
#         working-directory: medi-chat-frontend
#         env:
#           FRONTEND_URL: http://localhost:3000
#         run: npm run test:e2e

#       - name: Docker login
#         run: |
#           echo "${{ secrets.DOCKER_PASSWORD }}" \
#             | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

#       - name: Build & Push Docker image
#         working-directory: medi-chat-frontend
#         run: |
#           docker build \
#             --build-arg REACT_APP_API_URL=http://host.docker.internal:5001 \
#             -f Dockerfile \
#             -t ${{ secrets.DOCKER_USERNAME }}/frontend-chatbot:latest \
#             .
#           docker push ${{ secrets.DOCKER_USERNAME }}/frontend-chatbot:latest

# .github/workflows/frontend.yml
name: Frontend CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install & start Backend
        working-directory: backend
        run: |
          npm ci
          npm start &                          # launch backend on :5001
          npx wait-on --http-method GET http://localhost:5001/api/health

      - name: Install & build React
        working-directory: medi-chat-frontend
        env:
          REACT_APP_API_URL: http://localhost:5001
        run: |
          npm ci
          npm run build

      - name: Serve and wait for Frontend
        working-directory: medi-chat-frontend
        run: |
          npm install -g serve
          serve -s build -l 3000 &            # serve production build on :3000
          npx wait-on --http-method GET http://localhost:3000/medichat

      - name: Install Chrome & Chromedriver
        run: |
          sudo apt-get update
          # Install Google Chrome
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | \
            sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable chromium-chromedriver
          # Verify installations
          google-chrome --version
          chromedriver --version
          
      - name: Run Selenium E2E tests
        working-directory: medi-chat-frontend
        env:
          FRONTEND_URL: http://localhost:3000
          SELENIUM_URL: http://localhost:4444/wd/hub
        run: npm run test:e2e

      - name: Docker login
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" \
            | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build & Push Docker image
        working-directory: medi-chat-frontend
        run: |
          docker build \
            --build-arg REACT_APP_API_URL=http://localhost:5001 \
            -f Dockerfile \
            -t ${{ secrets.DOCKER_USERNAME }}/frontend-chatbot:latest \
            .
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend-chatbot:latest
