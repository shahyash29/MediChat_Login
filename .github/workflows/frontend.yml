name: Frontend CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      REACT_APP_API_URL: http://localhost:5001
      IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/frontend-chatbot

    steps:
    # ─── Checkout ───────────────────────────────────────────
    - uses: actions/checkout@v3

    # ─── Node setup (no cache to avoid lock-file warning) ───
    - uses: actions/setup-node@v3
      with:
        node-version: 18

    # ─── Install & start backend ────────────────────────────
    - name: Install & start Backend
      working-directory: backend
      run: |
        npm ci
        npm start &                               # start in background
        npx wait-on http://localhost:5001/api/health

    # ─── Build frontend bundle ──────────────────────────────
    - name: Build Frontend
      working-directory: medi-chat-frontend
      run: |
        npm ci
        npm run build

    # (optional) Serve bundle for a quick smoke-test
    # - name: Serve Frontend (smoke test)
    #   working-directory: medi-chat-frontend
    #   run: |
    #     npm install -g serve
    #     serve -s build -l 3000 &
    #     npx wait-on http://localhost:3000 --timeout 30000

    # ─── Build & push Docker image ──────────────────────────
    - name: Build & Push Frontend Docker Image
      run: |
        # log in once before both pushes
        echo "${{ secrets.DOCKER_PASSWORD }}" | \
          docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

        # build image from medi-chat-frontend/Dockerfile
        docker build \
          --build-arg REACT_APP_API_URL=${{ env.REACT_APP_API_URL }} \
          -f medi-chat-frontend/Dockerfile \
          -t ${{ secrets.DOCKER_USERNAME }}/chatbot_login-frontend:latest \
          medi-chat-frontend

        # push image
        docker push ${{ secrets.DOCKER_USERNAME }}/chatbot_login-frontend:latest
